CREATE TABLE IF NOT EXISTS users
(
    user_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name    VARCHAR NOT NULL,
    email   VARCHAR NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS location
(
    location_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    lat         DOUBLE PRECISION NOT NULL,
    lon         DOUBLE PRECISION NOT NULL
);

CREATE TABLE IF NOT EXISTS categories
(
    category_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name        VARCHAR NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS events
(
    event_id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    annotation         VARCHAR   NOT NULL,
    confirmed_requests BIGINT,
    created_on         TIMESTAMP NOT NULL,
    description        VARCHAR   NOT NULL,
    event_date         TIMESTAMP NOT NULL,
    paid               BOOLEAN   NOT NULL,
    participant_limit  BIGINT,
    published_on       TIMESTAMP,
    request_moderation BOOLEAN   NOT NULL,
    title              VARCHAR   NOT NULL,
    views              BIGINT,
    category_id        BIGINT    NOT NULL REFERENCES categories (category_id),
    initiator_id       BIGINT    NOT NULL REFERENCES users (user_id),
    location_id        BIGINT    NOT NULL REFERENCES location (location_id),
    state              VARCHAR   NOT NULL
);

CREATE TABLE IF NOT EXISTS compilations
(
    compilation_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title          VARCHAR NOT NULL UNIQUE,
    pinned         BOOLEAN NOT NULL
);

CREATE TABLE IF NOT EXISTS compilations_events
(
    compilation_id BIGINT REFERENCES compilations (compilation_id) ON DELETE CASCADE,
    event_id       BIGINT REFERENCES events (event_id) ON DELETE CASCADE,
    PRIMARY KEY (compilation_id, event_id)
);

CREATE TABLE IF NOT EXISTS requests
(
    request_id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created      TIMESTAMP NOT NULL,
    event_id     BIGINT REFERENCES events (event_id) ON DELETE CASCADE,
    requester_id BIGINT    NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
    status       VARCHAR   NOT NULL
);


